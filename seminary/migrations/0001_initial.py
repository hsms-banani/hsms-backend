# Generated by Django 5.2.5 on 2025-08-18 15:06

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('target_audience', models.CharField(choices=[('all', 'All'), ('students', 'Students'), ('faculty', 'Faculty'), ('staff', 'Staff'), ('visitors', 'Visitors')], default='all', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('show_on_homepage', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('organizer', models.CharField(blank=True, max_length=200)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('registration_required', models.BooleanField(default=False)),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('event_type', models.CharField(blank=True, choices=[('conference', 'Conference'), ('seminar', 'Seminar'), ('workshop', 'Workshop'), ('celebration', 'Celebration'), ('retreat', 'Retreat'), ('other', 'Other')], max_length=50)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='events/')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=100)),
                ('department', models.CharField(choices=[('philosophy', 'Department of Philosophy'), ('theology', 'Department of Theology'), ('administration', 'Administration')], max_length=20)),
                ('bio', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='faculty/')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('qualifications', models.TextField(blank=True, help_text='Academic qualifications and degrees')),
                ('specialization', models.CharField(blank=True, help_text='Area of specialization', max_length=200)),
                ('office_hours', models.CharField(blank=True, max_length=100)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of display')),
                ('is_active', models.BooleanField(default=True)),
                ('joined_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Faculty',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('gallery_type', models.CharField(choices=[('photo', 'Photo Gallery'), ('video', 'Video Gallery')], default='photo', max_length=10)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='gallery/covers/')),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Galleries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('publication_type', models.CharField(choices=[('ankur', 'Ankur - Student Research Papers'), ('diptto_sakhyo', 'Diptto Sakhyo - Seminary Journal'), ('prodipon', 'Prodipon - Theological Journal')], max_length=20)),
                ('content', models.TextField()),
                ('abstract', models.TextField(blank=True, help_text='Publication abstract or summary')),
                ('author', models.CharField(max_length=200)),
                ('co_authors', models.CharField(blank=True, help_text='Co-authors if any', max_length=500)),
                ('publication_date', models.DateField()),
                ('volume', models.CharField(blank=True, max_length=20)),
                ('issue', models.CharField(blank=True, max_length=20)),
                ('page_numbers', models.CharField(blank=True, help_text='e.g., 15-25', max_length=20)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='publications/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='publications/covers/')),
                ('keywords', models.CharField(blank=True, help_text='Comma-separated keywords', max_length=255)),
                ('is_published', models.BooleanField(default=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-publication_date'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Holy Spirit Major Seminary', max_length=200)),
                ('site_motto', models.CharField(default='Dedicated for Service', max_length=200)),
                ('site_logo', models.ImageField(blank=True, null=True, upload_to='site/')),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('facebook_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('youtube_url', models.URLField(blank=True)),
                ('google_analytics_id', models.CharField(blank=True, help_text='Google Analytics Tracking ID', max_length=50)),
                ('meta_description', models.CharField(blank=True, help_text='Default meta description for SEO', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='Default meta keywords for SEO', max_length=255)),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(blank=True, max_length=300)),
                ('image', models.ImageField(upload_to='slider/')),
                ('mobile_image', models.ImageField(blank=True, help_text='Optimized image for mobile devices', null=True, upload_to='slider/mobile/')),
                ('link_url', models.URLField(blank=True)),
                ('link_text', models.CharField(blank=True, max_length=50)),
                ('button_style', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('outline', 'Outline')], default='primary', max_length=20)),
                ('text_position', models.CharField(choices=[('center', 'Center'), ('left', 'Left'), ('right', 'Right')], default='center', max_length=20)),
                ('overlay_opacity', models.DecimalField(decimal_places=2, default=0.4, help_text='Background overlay opacity (0.0 to 1.0)', max_digits=3)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, help_text='Schedule slider start date', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='Schedule slider end date', null=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('committee_type', models.CharField(choices=[('editorial', 'Editorial Committee'), ('cultural', 'Cultural Committee'), ('pastoral', 'Pastoral Committee'), ('liturgical', 'Liturgical Committee'), ('academic', 'Academic Committee'), ('finance', 'Finance Committee'), ('discipline', 'Discipline Committee'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('chairperson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chaired_committees', to='seminary.faculty')),
                ('members', models.ManyToManyField(blank=True, related_name='committee_memberships', to='seminary.faculty')),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GalleryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='gallery/')),
                ('video_url', models.URLField(blank=True, help_text='YouTube, Vimeo, or other video URL')),
                ('video_file', models.FileField(blank=True, null=True, upload_to='gallery/videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'avi', 'mov', 'wmv'])])),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='seminary.gallery')),
            ],
            options={
                'ordering': ['order', '-id'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('content', models.TextField()),
                ('excerpt', models.CharField(max_length=300)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='news/')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('publish_date', models.DateTimeField(blank=True, help_text='Schedule publication date', null=True)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=255)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'News',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('content', models.TextField()),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='pages/')),
                ('is_published', models.BooleanField(default=True)),
                ('show_in_menu', models.BooleanField(default=False, help_text='Show this page in navigation menu')),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('parent_page', models.ForeignKey(blank=True, help_text='Parent page for hierarchical structure', null=True, on_delete=django.db.models.deletion.CASCADE, to='seminary.page')),
            ],
            options={
                'ordering': ['order', 'title'],
            },
        ),
    ]
