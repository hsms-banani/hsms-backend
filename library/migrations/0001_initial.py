# Generated by Django 5.2.5 on 2025-09-04 04:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('birth_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(2025)])),
                ('death_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(2025)])),
                ('nationality', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='BookSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=200)),
                ('search_count', models.PositiveIntegerField(default=1)),
                ('last_searched', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-search_count', '-last_searched'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('address', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('established_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(2025)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('subtitle', models.CharField(blank=True, max_length=500)),
                ('slug', models.SlugField(blank=True, max_length=500, unique=True)),
                ('publication_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(2025)])),
                ('isbn_10', models.CharField(blank=True, help_text='10-digit ISBN', max_length=10)),
                ('isbn_13', models.CharField(blank=True, help_text='13-digit ISBN', max_length=13)),
                ('classification_number', models.CharField(help_text='Dewey Decimal Classification (e.g., 236.5)', max_length=50)),
                ('cutter_number', models.CharField(help_text='Cutter number (e.g., L43n)', max_length=50)),
                ('call_number', models.CharField(blank=True, help_text='Auto-generated from classification + cutter number', max_length=100)),
                ('language', models.CharField(choices=[('en', 'English'), ('bn', 'Bangla'), ('hi', 'Hindi'), ('ur', 'Urdu'), ('es', 'Spanish'), ('fr', 'French'), ('de', 'German'), ('it', 'Italian'), ('pt', 'Portuguese'), ('la', 'Latin'), ('gr', 'Greek'), ('he', 'Hebrew'), ('ar', 'Arabic'), ('other', 'Other')], default='en', max_length=10)),
                ('pages', models.PositiveIntegerField(blank=True, null=True)),
                ('edition', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.CharField(blank=True, help_text='Comma-separated keywords for better searchability', max_length=500)),
                ('total_copies', models.PositiveIntegerField(default=1)),
                ('copies_available', models.PositiveIntegerField(default=1)),
                ('location_shelf', models.CharField(blank=True, help_text='Physical location in library (e.g., A-1-3)', max_length=50)),
                ('status', models.CharField(choices=[('available', 'Available'), ('checked_out', 'Checked Out'), ('reserved', 'Reserved'), ('lost', 'Lost'), ('damaged', 'Damaged'), ('repair', 'Under Repair')], default='available', max_length=20)),
                ('acquisition_date', models.DateField(auto_now_add=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='library/covers/')),
                ('times_borrowed', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('authors', models.ManyToManyField(related_name='books', to='library.author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='library.category')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='library.publisher')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['title'], name='library_boo_title_c38ef2_idx'), models.Index(fields=['call_number'], name='library_boo_call_nu_50e7df_idx'), models.Index(fields=['isbn_13'], name='library_boo_isbn_13_4d0001_idx'), models.Index(fields=['classification_number'], name='library_boo_classif_ce9382_idx')],
            },
        ),
    ]
